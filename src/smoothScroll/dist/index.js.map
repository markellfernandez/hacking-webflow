{
  "version": 3,
  "sources": ["../../util/live-reload.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/maths.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/animate.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/debounce.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/dimensions.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/nanoevents.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/virtual-scroll.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.12/node_modules/@studio-freight/lenis/src/index.js", "../../util/injectCSS.js", "../../util/webflow.js", "../../util/eval.js", "../index.js"],
  "sourcesContent": ["new EventSource(`http://localhost:${SERVE_PORT}/esbuild`).addEventListener(\n  \"change\",\n  () => location.reload()\n);\n", "// Clamp a value between a minimum and maximum value\nexport function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\n// Truncate a floating-point number to a specified number of decimal places\nexport function truncate(value, decimals = 0) {\n  return parseFloat(value.toFixed(decimals))\n}\n\n// Linearly interpolate between two values using an amount (0 <= amt <= 1)\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\nexport function clampedModulo(dividend, divisor) {\n  let remainder = dividend % divisor\n\n  // If the remainder and divisor have different signs, adjust the remainder\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\n    remainder += divisor\n  }\n\n  return remainder\n}\n", "import { clamp, lerp } from './maths'\n\n// Animate class to handle value animations with lerping or easing\nexport class Animate {\n  // Advance the animation by the given delta time\n  advance(deltaTime) {\n    if (!this.isRunning) return\n\n    let completed = false\n\n    if (this.lerp) {\n      this.value = lerp(this.value, this.to, this.lerp)\n      if (Math.round(this.value) === this.to) {\n        this.value = this.to\n        completed = true\n      }\n    } else {\n      this.currentTime += deltaTime\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\n\n      completed = linearProgress >= 1\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\n      this.value = this.from + (this.to - this.from) * easedProgress\n    }\n\n    // Call the onUpdate callback with the current value and completed status\n    this.onUpdate?.(this.value, { completed })\n\n    if (completed) {\n      this.stop()\n    }\n  }\n\n  // Stop the animation\n  stop() {\n    this.isRunning = false\n  }\n\n  // Set up the animation from a starting value to an ending value\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\n    this.from = this.value = from\n    this.to = to\n    this.lerp = lerp\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n\n    this.onUpdate = onUpdate\n  }\n}\n", "export function debounce(callback, delay) {\n  let timer\n  return function () {\n    let args = arguments\n    let context = this\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      callback.apply(context, args)\n    }, delay)\n  }\n}\n", "import { debounce } from './debounce'\n\nexport class Dimensions {\n  constructor(wrapper, content) {\n    this.wrapper = wrapper\n    this.content = content\n\n    if (this.wrapper === window) {\n      window.addEventListener('resize', this.onWindowResize, false)\n      this.onWindowResize()\n    } else {\n      this.wrapperResizeObserver = new ResizeObserver(\n        debounce(this.onWrapperResize, 100)\n      )\n      this.wrapperResizeObserver.observe(this.wrapper)\n      this.onWrapperResize()\n    }\n\n    this.contentResizeObserver = new ResizeObserver(\n      debounce(this.onContentResize, 100)\n    )\n    this.contentResizeObserver.observe(this.content)\n    this.onContentResize()\n  }\n\n  onWindowResize = () => {\n    this.width = window.innerWidth\n    this.height = window.innerHeight\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.onWindowResize, false)\n\n    this.wrapperResizeObserver?.disconnect()\n    this.contentResizeObserver?.disconnect()\n  }\n\n  onWrapperResize = () => {\n    this.width = this.wrapper.clientWidth\n    this.height = this.wrapper.clientHeight\n  }\n\n  onContentResize = () => {\n    const element =\n      this.wrapper === window ? document.documentElement : this.wrapper\n    this.scrollHeight = element.scrollHeight\n    this.scrollWidth = element.scrollWidth\n  }\n\n  get limit() {\n    return {\n      x: this.scrollWidth - this.width,\n      y: this.scrollHeight - this.height,\n    }\n  }\n}\n", "export let createNanoEvents = () => ({\n  events: {},\n\n  // Emit an event with the provided arguments\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n\n  // Register a callback for the specified event\n  on(event, cb) {\n    // Add the callback to the event's callback list, or create a new list with the callback\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n\n    // Return an unsubscribe function\n    return () => {\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\n    }\n  },\n})\n", "import { clamp } from './maths'\nimport { createNanoEvents } from './nanoevents'\n\nexport class VirtualScroll {\n  constructor(\n    element,\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\n  ) {\n    this.element = element\n    this.wheelMultiplier = wheelMultiplier\n    this.touchMultiplier = touchMultiplier\n    this.normalizeWheel = normalizeWheel\n\n    this.touchStart = {\n      x: null,\n      y: null,\n    }\n\n    this.emitter = createNanoEvents()\n\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\n    this.element.addEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.addEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.addEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Add an event listener for the given event and callback\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  // Remove all event listeners and clean up\n  destroy() {\n    this.emitter.events = {}\n\n    this.element.removeEventListener('wheel', this.onWheel, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\n      passive: false,\n    })\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\n      passive: false,\n    })\n  }\n\n  // Event handler for 'touchstart' event\n  onTouchStart = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: 0,\n      y: 0,\n    }\n  }\n\n  // Event handler for 'touchmove' event\n  onTouchMove = (event) => {\n    const { clientX, clientY } = event.targetTouches\n      ? event.targetTouches[0]\n      : event\n\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\n\n    this.touchStart.x = clientX\n    this.touchStart.y = clientY\n\n    this.lastDelta = {\n      x: deltaX,\n      y: deltaY,\n    }\n\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      deltaX,\n      deltaY,\n      event,\n    })\n  }\n\n  onTouchEnd = (event) => {\n    this.emitter.emit('scroll', {\n      type: 'touch',\n      inertia: true,\n      deltaX: this.lastDelta.x,\n      deltaY: this.lastDelta.y,\n      event,\n    })\n  }\n\n  // Event handler for 'wheel' event\n  onWheel = (event) => {\n    let { deltaX, deltaY } = event\n\n    if (this.normalizeWheel) {\n      deltaX = clamp(-100, deltaX, 100)\n      deltaY = clamp(-100, deltaY, 100)\n    }\n\n    deltaX *= this.wheelMultiplier\n    deltaY *= this.wheelMultiplier\n\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\n  }\n}\n", "import { version } from '../package.json'\nimport { Animate } from './animate'\nimport { Dimensions } from './dimensions'\nimport { clamp, clampedModulo } from './maths'\nimport { createNanoEvents } from './nanoevents'\nimport { VirtualScroll } from './virtual-scroll'\n\n// Technical explaination\n// - listen to 'wheel' events\n// - prevent 'wheel' event to prevent scroll\n// - normalize wheel delta\n// - add delta to targetScroll\n// - animate scroll to targetScroll (smooth context)\n// - if animation is not running, listen to 'scroll' events (native context)\n\nexport default class Lenis {\n  // isScrolling = true when scroll is animating\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\n  // isSmooth = true if scroll should be animated\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\n\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Orientation\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\n   *\n   * @typedef LenisOptions\n   * @property {Orientation} [direction]\n   * @property {GestureOrientation} [gestureDirection]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smooth]\n   *\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   * @property {Window | HTMLElement} [wheelEventsTarget]\n   * @property {boolean} [smoothWheel]\n   * @property {boolean} [smoothTouch]\n   * @property {boolean} [syncTouch]\n   * @property {number} [syncTouchLerp]\n   * @property {number} [touchInertiaMultiplier]\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {number} [lerp]\n   * @property {boolean} [infinite]\n   * @property {Orientation} [orientation]\n   * @property {GestureOrientation} [gestureOrientation]\n   * @property {number} [touchMultiplier]\n   * @property {number} [wheelMultiplier]\n   * @property {boolean} [normalizeWheel]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    //--legacy options--//\n    direction,\n    gestureDirection,\n    mouseMultiplier,\n    smooth,\n    //--legacy options--//\n    wrapper = window,\n    content = document.documentElement,\n    wheelEventsTarget = wrapper,\n    smoothWheel = smooth ?? true,\n    smoothTouch = false,\n    syncTouch = false,\n    syncTouchLerp = 0.1,\n    touchInertiaMultiplier = 35,\n    duration, // in seconds\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\n    lerp = duration ? null : 0.1,\n    infinite = false,\n    orientation = direction ?? 'vertical', // vertical, horizontal\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\n    touchMultiplier = 1,\n    wheelMultiplier = mouseMultiplier ?? 1,\n    normalizeWheel = false,\n  } = {}) {\n    // warn about legacy options\n    if (direction) {\n      console.warn(\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\n      )\n    }\n    if (gestureDirection) {\n      console.warn(\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\n      )\n    }\n    if (mouseMultiplier) {\n      console.warn(\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\n      )\n    }\n    if (smooth) {\n      console.warn(\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\n      )\n    }\n\n    window.lenisVersion = version\n\n    // if wrapper is html or body, fallback to window\n    if (wrapper === document.documentElement || wrapper === document.body) {\n      wrapper = window\n    }\n\n    this.options = {\n      wrapper,\n      content,\n      wheelEventsTarget,\n      smoothWheel,\n      smoothTouch,\n      syncTouch,\n      syncTouchLerp,\n      touchInertiaMultiplier,\n      duration,\n      easing,\n      lerp,\n      infinite,\n      gestureOrientation,\n      orientation,\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    }\n\n    this.dimensions = new Dimensions(wrapper, content)\n    this.rootElement.classList.add('lenis')\n\n    this.velocity = 0\n    this.isStopped = false\n    this.isSmooth = smoothWheel || smoothTouch\n    this.isScrolling = false\n    this.targetScroll = this.animatedScroll = this.actualScroll\n    this.animate = new Animate()\n    this.emitter = createNanoEvents()\n\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\n      touchMultiplier,\n      wheelMultiplier,\n      normalizeWheel,\n    })\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\n  }\n\n  destroy() {\n    this.emitter.events = {}\n\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\n      passive: false,\n    })\n\n    this.virtualScroll.destroy()\n  }\n\n  on(event, callback) {\n    return this.emitter.on(event, callback)\n  }\n\n  off(event, callback) {\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\n      (i) => callback !== i\n    )\n  }\n\n  setScroll(scroll) {\n    // apply scroll value immediately\n    if (this.isHorizontal) {\n      this.rootElement.scrollLeft = scroll\n    } else {\n      this.rootElement.scrollTop = scroll\n    }\n  }\n\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\n    // keep zoom feature\n    if (event.ctrlKey) return\n\n    const isTouch = type === 'touch'\n    const isWheel = type === 'wheel'\n\n    if (\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\n      (isTouch &&\n        this.options.gestureOrientation === 'vertical' &&\n        this.scroll === 0 &&\n        !this.options.infinite &&\n        deltaY <= 0) // touch pull to refresh\n    )\n      return\n\n    // catch if scrolling on nested scroll elements\n    if (\n      !!event\n        .composedPath()\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\n    )\n      return\n\n    if (this.isStopped || this.isLocked) {\n      event.preventDefault()\n      return\n    }\n\n    this.isSmooth =\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\n      (this.options.smoothWheel && isWheel)\n\n    if (!this.isSmooth) {\n      this.isScrolling = false\n      this.animate.stop()\n      return\n    }\n\n    event.preventDefault()\n\n    let delta = deltaY\n    if (this.options.gestureOrientation === 'both') {\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\n    } else if (this.options.gestureOrientation === 'horizontal') {\n      delta = deltaX\n    }\n\n    const syncTouch = isTouch && this.options.syncTouch\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\n    if (hasTouchInertia) {\n      delta = this.velocity * this.options.touchInertiaMultiplier\n    }\n\n    this.scrollTo(this.targetScroll + delta, {\n      programmatic: false,\n      ...(syncTouch && {\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\n      }),\n    })\n  }\n\n  emit() {\n    this.emitter.emit('scroll', this)\n  }\n\n  onScroll = () => {\n    if (!this.isScrolling) {\n      const lastScroll = this.animatedScroll\n      this.animatedScroll = this.targetScroll = this.actualScroll\n      this.velocity = 0\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\n      this.emit()\n    }\n  }\n\n  reset() {\n    this.isLocked = false\n    this.isScrolling = false\n    this.velocity = 0\n    this.animate.stop()\n  }\n\n  start() {\n    this.isStopped = false\n\n    this.reset()\n  }\n\n  stop() {\n    this.isStopped = true\n    this.animate.stop()\n\n    this.reset()\n  }\n\n  raf(time) {\n    const deltaTime = time - (this.time || time)\n    this.time = time\n\n    this.animate.advance(deltaTime * 0.001)\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      lock = false,\n      duration = this.options.duration,\n      easing = this.options.easing,\n      lerp = !duration && this.options.lerp,\n      onComplete = null,\n      force = false, // scroll even if stopped\n      programmatic = true, // called from outside of the class\n    } = {}\n  ) {\n    if (this.isStopped && !force) return\n\n    // keywords\n    if (['top', 'left', 'start'].includes(target)) {\n      target = 0\n    } else if (['bottom', 'right', 'end'].includes(target)) {\n      target = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      }\n\n      if (node) {\n        if (this.options.wrapper !== window) {\n          // nested scroll offset correction\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\n        }\n\n        const rect = node.getBoundingClientRect()\n\n        target =\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\n      }\n    }\n\n    if (typeof target !== 'number') return\n\n    target += offset\n    target = Math.round(target)\n\n    if (this.options.infinite) {\n      if (programmatic) {\n        this.targetScroll = this.animatedScroll = this.scroll\n      }\n    } else {\n      target = clamp(0, target, this.limit)\n    }\n\n    if (immediate) {\n      this.animatedScroll = this.targetScroll = target\n      this.setScroll(this.scroll)\n      this.reset()\n      this.emit()\n      onComplete?.()\n      return\n    }\n\n    if (!programmatic) {\n      if (target === this.targetScroll) return\n\n      this.targetScroll = target\n    }\n\n    this.animate.fromTo(this.animatedScroll, target, {\n      duration,\n      easing,\n      lerp,\n      onUpdate: (value, { completed }) => {\n        // started\n        if (lock) this.isLocked = true\n        this.isScrolling = true\n\n        // updated\n        this.velocity = value - this.animatedScroll\n        this.direction = Math.sign(this.velocity)\n\n        this.animatedScroll = value\n        this.setScroll(this.scroll)\n\n        if (programmatic) {\n          // wheel during programmatic should stop it\n          this.targetScroll = value\n        }\n\n        // completed\n        if (completed) {\n          if (lock) this.isLocked = false\n          requestAnimationFrame(() => {\n            //avoid double scroll event\n            this.isScrolling = false\n          })\n          this.velocity = 0\n          onComplete?.()\n        }\n\n        this.emit()\n      },\n    })\n  }\n\n  get rootElement() {\n    return this.options.wrapper === window\n      ? this.options.content\n      : this.options.wrapper\n  }\n\n  get limit() {\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\n  }\n\n  get isHorizontal() {\n    return this.options.orientation === 'horizontal'\n  }\n\n  get actualScroll() {\n    // value browser takes into account\n    return this.isHorizontal\n      ? this.rootElement.scrollLeft\n      : this.rootElement.scrollTop\n  }\n\n  get scroll() {\n    return this.options.infinite\n      ? clampedModulo(this.animatedScroll, this.limit)\n      : this.animatedScroll\n  }\n\n  get progress() {\n    // avoid progress to be NaN\n    return this.limit === 0 ? 1 : this.scroll / this.limit\n  }\n\n  get isSmooth() {\n    return this.__isSmooth\n  }\n\n  set isSmooth(value) {\n    if (this.__isSmooth !== value) {\n      this.rootElement.classList.toggle('lenis-smooth', value)\n      this.__isSmooth = value\n    }\n  }\n\n  get isScrolling() {\n    return this.__isScrolling\n  }\n\n  set isScrolling(value) {\n    if (this.__isScrolling !== value) {\n      this.rootElement.classList.toggle('lenis-scrolling', value)\n      this.__isScrolling = value\n    }\n  }\n\n  get isStopped() {\n    return this.__isStopped\n  }\n\n  set isStopped(value) {\n    if (this.__isStopped !== value) {\n      this.rootElement.classList.toggle('lenis-stopped', value)\n      this.__isStopped = value\n    }\n  }\n}\n", "export function injectCSS(string) {\n  const style = document.createElement(\"style\");\n  style.textContent = string;\n  document.head.append(style);\n}\n\n/*\n  injectCSS() {\n    const style = document.createElement(\"style\");\n\n    const styleString = `\n    .lenis.lenis-smooth {\n      scroll-behavior: auto;  \n    }\n    html.lenis {\n      height: auto;\n    }\n    `;\n\n    style.textContent = styleString;\n    document.head.append(style);\n  }\n\n*/\n", "export function handleEditor(onEditorView = null) {\n  // console.log(Webflow.env(\"editor\"));\n  if (Webflow.env(\"editor\") !== undefined) {\n    if (onEditorView !== null) onEditorView();\n    console.log(\"Webflow Editor View\");\n    return true;\n  } else {\n    return false;\n  }\n}\n", "function isArrowFunction(str) {\n  const arrowFunctionRegex =\n    /^(\\s*[(]?[a-zA-Z0-9\\s,]*[)]?\\s*=>\\s*{?\\s*[\\s\\S]*}?)/;\n  return arrowFunctionRegex.test(str);\n}\n\nexport function evalConfig(selector, defaults = {}) {\n  const data = document.querySelector(selector);\n  if (!data) return { ...defaults };\n\n  const out = { ...data.dataset };\n\n  for (const item in out) {\n    const value = out[item];\n\n    if (value === \"\" || value === \" \") {\n      // remove empties\n      // out[item] = value;\n    } else if (!isNaN(value)) {\n      // compute numbers\n      out[item] = +value;\n    } else if (value === \"true\" || value === \"false\") {\n      // compute boolean\n      if (value === \"true\") {\n        out[item] = true;\n      } else out[item] = false;\n    } else if (isArrowFunction(value)) {\n      // console.log(\"arrow function\", value);\n      out[item] = new Function(`return ${value};`)();\n    } else {\n      // copy if string\n      out[item] = value;\n      //console.log(\"to be found\", item, out[item], \"type:\", typeof out[item]);\n    }\n  }\n\n  return { ...defaults, ...out };\n}\n", "import Lenis from \"@studio-freight/lenis\";\nimport { injectCSS } from \"../util/injectCSS\";\nimport { handleEditor } from \"../util/webflow\";\nimport { evalConfig } from \"../util/eval\";\n/*\n  TODO\n\n  - add lenis listenable events from wf DOM\n  - add configurable external interface\n*/\n\n/* ---  Additional CSS */\nconst customcss = injectCSS(`\n    .lenis.lenis-smooth {\n      scroll-behavior: auto;  \n    }\n    html.lenis {\n      height: auto;\n    }\n`);\n\n/*  --- Additional CSS */\nclass Scroll extends Lenis {\n  constructor(params) {\n    super({\n      params,\n    });\n\n    this.params = params;\n    this.isActive = true;\n    this.init();\n\n    // -- interface\n    this.call = {\n      stop: () => this.stop(),\n      start: () => this.start(),\n    };\n  }\n\n  init() {\n    this.config();\n    this.render();\n\n    if (this.params.useRaf) {\n      this.y = window.scrollY;\n      this.max = window.innerHeight;\n      this.speed = 0;\n      this.percent = this.y / (document.body.scrollHeight - window.innerHeight);\n      this.direction = 0;\n      this.on(\"scroll\", (e) => this.outScroll(e));\n    }\n\n    handleEditor(this.destroy);\n  }\n\n  config() {\n    if (this.params.useAnchor)\n      [...document.querySelectorAll(\"[data-scrolllink]\")].forEach((item) => {\n        const target = document.querySelector(item.dataset.scrolllink);\n        if (target)\n          item.addEventListener(\n            \"click\",\n            (e) => {\n              e.preventDefault();\n              this.scrollTo(target);\n            },\n            { passive: false }\n          );\n      });\n    if (this.params.useOverscroll)\n      [...document.querySelectorAll('[data-scroll=\"overscroll\"]')].forEach(\n        (item) => item.setAttribute(\"onwheel\", \"event.stopPropagation()\")\n      );\n\n    if (this.params.useControls) {\n      [...document.querySelectorAll('[data-scroll=\"stop\"]')].forEach((item) => {\n        item.onclick = () => {\n          this.stop();\n          this.isActive = false;\n        };\n      });\n\n      [...document.querySelectorAll('[data-scroll=\"start\"]')].forEach(\n        (item) => {\n          item.onclick = () => {\n            this.start();\n            this.isActive = true;\n          };\n        }\n      );\n\n      [...document.querySelectorAll('[data-scroll=\"toggle\"]')].forEach(\n        (item) => {\n          item.onclick = () => {\n            if (this.isActive) {\n              this.stop();\n              this.isActive = false;\n            } else {\n              this.start();\n              this.isActive = true;\n            }\n          };\n        }\n      );\n    }\n  }\n\n  render(time) {\n    this.raf(time);\n    window.requestAnimationFrame(this.render.bind(this));\n    // if (this.params.useRaf) this.renderWebflow(time);\n  }\n\n  outScroll({ scroll, limit, velocity, progress, direction }) {\n    // console.log(scroll, limit, velocity, progress, direction);\n    this.y = scroll || 0;\n    this.max = limit || window.innerHeight;\n    this.speed = velocity || 0;\n    this.percent = progress || 0;\n    this.direction = 0;\n  }\n\n  // renderWebflow(time) {}\n}\n\n/*  --- Init */\nconst params = evalConfig(\"[data-id-scroll]\", {\n  // defaults\n  wrapper: window,\n  duration: 1.5,\n  easing: (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), // https://easings.net\n  orientation: \"vertical\",\n  smoothWheel: true,\n  smoothTouch: false,\n  touchMultiplier: 1.5,\n  infinite: false,\n  // internal\n  useOverscroll: true,\n  useControls: true,\n  useAnchor: true,\n  useRaf: true,\n});\n\nwindow.SScroll = new Scroll(params);\n// window.SScroll.renderWebflow = (time) => {};\n"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "amt", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "t", "debounce", "callback", "delay", "timer", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "Dimensions", "constructor", "wrapper", "content", "onWindowResize", "width", "window", "innerWidth", "height", "innerHeight", "onWrapperResize", "clientWidth", "clientHeight", "onContentResize", "element", "document", "documentElement", "scrollHeight", "scrollWidth", "addEventListener", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "removeEventListener", "disconnect", "limit", "x", "y", "createNanoEvents", "events", "emit", "event", "callbacks", "i", "length", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "VirtualScroll", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "clientX", "clientY", "targetTouches", "touchStart", "lastDelta", "onTouchMove", "deltaX", "deltaY", "emitter", "type", "onTouchEnd", "inertia", "onWheel", "passive", "Lenis", "direction", "gestureDirection", "mouseMultiplier", "smooth", "wheelEventsTarget", "smoothWheel", "smoothTouch", "syncTouch", "syncTouchLerp", "touchInertiaMultiplier", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "isWheel", "options", "scroll", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "sign", "console", "warn", "lenisVersion", "body", "dimensions", "rootElement", "classList", "add", "virtualScroll", "off", "_this$emitter$events$", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "includes", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "dividend", "divisor", "remainder", "progress", "__isSmooth", "toggle", "__isScrolling", "__isStopped", "params", "e", "t"]
}
