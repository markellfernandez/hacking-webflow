{
  "version": 3,
  "sources": ["../../util/live-reload.js", "../node_modules/.pnpm/nanoevents@6.0.2/node_modules/nanoevents/index.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.0/node_modules/@studio-freight/lenis/src/maths.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.0/node_modules/@studio-freight/lenis/src/animate.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.0/node_modules/@studio-freight/lenis/src/observed-element.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.0/node_modules/@studio-freight/lenis/src/virtual-scroll.js", "../node_modules/.pnpm/@studio-freight+lenis@1.0.0/node_modules/@studio-freight/lenis/src/index.js", "../../util/injectCSS.js", "../../util/webflow.js", "../../util/eval.js", "../index.js"],
  "sourcesContent": ["new EventSource(`http://localhost:${SERVE_PORT}/esbuild`).addEventListener(\n  \"change\",\n  () => location.reload()\n);\n", "export let createNanoEvents = () => ({\n  events: {},\n  emit(event, ...args) {\n    ;(this.events[event] || []).forEach(i => i(...args))\n  },\n  on(event, cb) {\n    ;(this.events[event] = this.events[event] || []).push(cb)\n    return () =>\n      (this.events[event] = (this.events[event] || []).filter(i => i !== cb))\n  }\n})\n", "export function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\nexport function lerp(start, end, amt) {\r\n  return (1 - amt) * start + amt * end\r\n}\r\n\r\nexport function clampedModulo(dividend, divisor) {\r\n  let remainder = dividend % divisor\r\n\r\n  if ((divisor > 0 && remainder < 0) || (divisor < 0 && remainder > 0)) {\r\n    remainder += divisor\r\n  }\r\n\r\n  return remainder\r\n}\r\n", "import { clamp, lerp } from './maths'\r\n\r\nexport class Animate {\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = lerp(this.value, this.to, this.lerp)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "export class ObservedElement {\r\n  constructor(element) {\r\n    this.element = element\r\n\r\n    if (element === window) {\r\n      window.addEventListener('resize', this.onWindowResize)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.width = this.element.offsetWidth\r\n      this.height = this.element.offsetHeight\r\n\r\n      this.resizeObserver = new ResizeObserver(this.onResize)\r\n      this.resizeObserver.observe(this.element)\r\n    }\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('resize', this.onWindowResize)\r\n    this.resizeObserver.disconnect()\r\n  }\r\n\r\n  onResize = ([entry]) => {\r\n    if (entry) {\r\n      const { width, height } = entry.contentRect\r\n      this.width = width\r\n      this.height = height\r\n    }\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n  }\r\n}\r\n", "import { createNanoEvents } from 'nanoevents'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  onTouchStart = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = pageX\r\n    this.touchStart.y = pageY\r\n  }\r\n\r\n  onTouchMove = (event) => {\r\n    const { pageX, pageY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(pageX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(pageY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = pageX\r\n    this.touchStart.y = pageY\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { createNanoEvents } from 'nanoevents'\r\nimport { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { clamp, clampedModulo } from './maths'\r\nimport { ObservedElement } from './observed-element'\r\nimport { VirtualScroll } from './virtual-scroll.js'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 2,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = true,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    }\r\n\r\n    this.wrapper = new ObservedElement(wrapper)\r\n    this.content = new ObservedElement(content)\r\n\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.wrapper.element.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wrapper, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.wrapper.element.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    // keep previous/next page gesture on trackpads\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) ||\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0)\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      (this.options.smoothTouch && type === 'touch') ||\r\n      (this.options.smoothWheel && type === 'wheel')\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, { programmatic: false })\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.wrapper.element !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.wrapper.element.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.animate.stop()\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.wrapper.element === window\r\n      ? this.content.element\r\n      : this.wrapper.element\r\n  }\r\n\r\n  get limit() {\r\n    return Math.round(\r\n      this.isHorizontal\r\n        ? this.content.width - this.wrapper.width\r\n        : this.content.height - this.wrapper.height\r\n    )\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? clampedModulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    return this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n", "export function injectCSS(string) {\n  const style = document.createElement(\"style\");\n  style.textContent = string;\n  document.head.append(style);\n}\n\n/*\n  injectCSS() {\n    const style = document.createElement(\"style\");\n\n    const styleString = `\n    .lenis.lenis-smooth {\n      scroll-behavior: auto;  \n    }\n    html.lenis {\n      height: auto;\n    }\n    `;\n\n    style.textContent = styleString;\n    document.head.append(style);\n  }\n\n*/\n", "export function handleEditor(onEditorView) {\n  const html = document.documentElement;\n  const config = { attributes: true, childList: false, subtree: false };\n\n  const callback = (mutationList) => {\n    for (const mutation of mutationList) {\n      if (mutation.type === \"attributes\") {\n        [\n          ...document.querySelectorAll(\n            \".w-editor-bem-EditSiteButton , .w-editor-bem-EditorMainMenu\"\n          ),\n        ].forEach((item) => {\n          item.onclick = () => {\n            onEditorView();\n          };\n        });\n      }\n    }\n  };\n\n  const observer = new MutationObserver(callback);\n  observer.observe(html, config);\n}\n", "function isArrowFunction(str) {\n  const arrowFunctionRegex =\n    /^(\\s*[(]?[a-zA-Z0-9\\s,]*[)]?\\s*=>\\s*{?\\s*[\\s\\S]*}?)/;\n  return arrowFunctionRegex.test(str);\n}\n\nexport function evalConfig(selector, defaults = {}) {\n  const data = document.querySelector(selector).dataset;\n  const out = { ...data };\n\n  for (const item in out) {\n    const value = out[item];\n\n    if (value === \"\" || value === \" \") {\n      // remove empties\n      // out[item] = value;\n    } else if (!isNaN(value)) {\n      // compute numbers\n      out[item] = +value;\n    } else if (value === \"true\" || value === \"false\") {\n      // compute boolean\n      if (value === \"true\") {\n        out[item] = true;\n      } else out[item] = false;\n    } else if (isArrowFunction(value)) {\n      // console.log(\"arrow function\", value);\n      out[item] = new Function(`return ${value};`)();\n    } else {\n      // copy if string\n      out[item] = value;\n      //console.log(\"to be found\", item, out[item], \"type:\", typeof out[item]);\n    }\n  }\n\n  return { ...defaults, ...out };\n}\n", "import Lenis from \"@studio-freight/lenis\";\nimport { injectCSS } from \"../util/injectCSS\";\nimport { handleEditor } from \"../util/webflow\";\nimport { evalConfig } from \"../util/eval\";\n/*\n  TODO\n\n  - add lenis listenable events from wf DOM\n  - add configurable external interface\n*/\n\n/* ---  Additional CSS */\nconst customcss = injectCSS(`\n    .lenis.lenis-smooth {\n      scroll-behavior: auto;  \n    }\n    html.lenis {\n      height: auto;\n    }\n`);\n\n/*  --- Additional CSS */\nclass Scroll extends Lenis {\n  constructor(params) {\n    super({\n      params,\n    });\n\n    this.params = params;\n    this.isActive = true;\n    this.init();\n  }\n\n  init() {\n    this.config();\n    this.render();\n\n    // console.log(this.params.useRaf);\n    if (this.params.useRaf) {\n      this.y = window.scrollY;\n      this.max = window.innerHeight;\n      this.speed = 0;\n      this.percent = this.y / (document.body.scrollHeight - window.innerHeight);\n      this.direction = 0;\n      this.on(\"scroll\", (e) => this.outScroll(e));\n    }\n\n    handleEditor(this.destroy);\n  }\n\n  config() {\n    if (this.params.useAnchor)\n      [...document.querySelectorAll(\"[data-scrolllink]\")].forEach((item) => {\n        const target = document.querySelector(item.dataset.scrolllink);\n        if (target)\n          item.addEventListener(\"click\", () => {\n            this.scrollTo(target);\n          });\n      });\n    if (this.params.useOverscroll)\n      [...document.querySelectorAll('[data-scroll=\"overscroll\"]')].forEach(\n        (item) => item.setAttribute(\"onwheel\", \"event.stopPropagation()\")\n      );\n\n    if (this.params.useControls) {\n      [...document.querySelectorAll('[data-scroll=\"stop\"]')].forEach((item) => {\n        item.onclick = () => {\n          this.stop();\n          this.isActive = false;\n        };\n      });\n\n      [...document.querySelectorAll('[data-scroll=\"start\"]')].forEach(\n        (item) => {\n          item.onclick = () => {\n            this.start();\n            this.isActive = true;\n          };\n        }\n      );\n\n      [...document.querySelectorAll('[data-scroll=\"toggle\"]')].forEach(\n        (item) => {\n          item.onclick = () => {\n            if (this.isActive) {\n              this.stop();\n              this.isActive = false;\n            } else {\n              this.start();\n              this.isActive = true;\n            }\n          };\n        }\n      );\n    }\n  }\n\n  render(time) {\n    this.raf(time);\n    window.requestAnimationFrame(this.render.bind(this));\n    if (this.params.useRaf) this.renderWebflow(time);\n  }\n\n  outScroll({ scroll, limit, velocity, progress, direction }) {\n    // console.log(scroll, limit, velocity, progress, direction);\n    this.y = scroll || 0;\n    this.max = limit || window.innerHeight;\n    this.speed = velocity || 0;\n    this.percent = progress || 0;\n    this.direction = 0;\n  }\n\n  renderWebflow(t) {\n    // empty function to access the raf from webflow\n  }\n}\n\n/*  --- Init */\nconst params = evalConfig(\"[data-id-scroll]\", {\n  // defaults\n  duration: 1.5,\n  easing: (t) => (t === 1 ? 1 : 1 - Math.pow(2, -10 * t)), // https://easings.net\n  orientation: \"vertical\",\n  smoothWheel: true,\n  smoothTouch: false,\n  touchMultiplier: 1.5,\n  // internal\n  useOverscroll: true,\n  useControls: true,\n  useAnchor: true,\n  useRaf: true,\n});\n\nwindow.SmoothScroll = new Scroll(params);\n"],
  "mappings": "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",
  "names": ["i", "clamp", "min", "input", "max", "Math", "Animate", "advance", "deltaTime", "_this$onUpdate", "this", "isRunning", "completed", "lerp", "value", "amt", "to", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "t", "ObservedElement", "constructor", "element", "onResize", "entry", "width", "height", "contentRect", "onWindowResize", "window", "innerWidth", "innerHeight", "addEventListener", "offsetWidth", "offsetHeight", "resizeObserver", "ResizeObserver", "observe", "destroy", "removeEventListener", "disconnect", "VirtualScroll", "wheelMultiplier", "touchMultiplier", "normalizeWheel", "onTouchStart", "event", "pageX", "pageY", "targetTouches", "touchStart", "x", "y", "onTouchMove", "deltaX", "deltaY", "emitter", "emit", "type", "onWheel", "createNanoEvents", "passive", "on", "callback", "events", "Lenis", "direction", "gestureDirection", "mouseMultiplier", "smooth", "wrapper", "content", "document", "documentElement", "smoothWheel", "smoothTouch", "pow", "infinite", "orientation", "gestureOrientation", "onVirtualScroll", "ctrlKey", "options", "composedPath", "find", "node", "hasAttribute", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "scrollTo", "targetScroll", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "velocity", "sign", "console", "warn", "lenisVersion", "body", "rootElement", "classList", "add", "virtualScroll", "off", "_this$emitter$events$", "filter", "i", "setScroll", "scroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "offset", "immediate", "lock", "onComplete", "force", "includes", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "dividend", "divisor", "remainder", "progress", "__isSmooth", "toggle", "__isScrolling", "__isStopped", "params", "e"]
}
